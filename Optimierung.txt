vor Optimierung: ~2550 ms für 30x30
cached entropy:
    ~280ms (debug) für 30x30; ~130ms (release) für 70x70; ~300ms (release) für 100x100, braucht ~300 Versuche
    T-Shape + Curve: ~600ms für 100x100, ~3500ms für 200x200
correct entropy metric (max entropy -> min entropy)
    ~400ms für 100x100 T-Shape, 1 Versuch
    ~9750ms für 300x300 T-Shape
cached edge masks
    ~8150ms für 300x300
shrinking entropy array
    ~15550ms für 300x300, forgot to mark dirtyEntropies elem as clean
    ~6700ms für 300x300
    ~5700ms für 300x300 mit std::remove_if
further optimization
    5478,8ms, removed log spam
    3463,0, inlined checkEntropy

profiling commands:
make clean; make profiling
valgrind --tool=callgrind ./main 70 70; valgrind --tool=callgrind ./main 150 150 &
valgrind --tool=callgrind ./main 300 300 &

kcachegrind ./callgrind.out.x


restliche sortieren? nur die geänderten müssen verschoben werden, dafür kann direkt das erste verwendet werden
    
counter für collapsed vs. sich ergebene Felder